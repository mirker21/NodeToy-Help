/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 ./public/3D_models/handcar_plank.gltf 
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei'
import { data as plankShaderData } from '../../shaders/plank-shader.ts'
import { NodeToyMaterial } from '@nodetoy/react-nodetoy';


type GLTFResult = GLTF & {
  nodes: {
    Plank: THREE.Mesh
  }
  materials: {
    ['Material.007']: THREE.MeshStandardMaterial
  }
}
console.log('plank!', plankShaderData)
type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Plank(props: JSX.IntrinsicElements['group']) {
  const { nodes } = useGLTF('./public/3D_models/handcar_rail_plank.gltf') as GLTFResult;
  console.log(nodes)
  return (
    <group {...props} dispose={null}>
        <mesh geometry={nodes.Plank.geometry}>
            <NodeToyMaterial data={plankShaderData} />
        </mesh>
    </group>
  )
}

useGLTF.preload('./public/3D_models/handcar_rail_plank.gltf')